/*! @asymmetrik/ngx-leaflet-draw - 3.1.0 - Copyright Asymmetrik, Ltd. 2007-2018 - All Rights Reserved. + */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@asymmetrik/ngx-leaflet"),require("leaflet"),require("leaflet-draw")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@asymmetrik/ngx-leaflet","leaflet","leaflet-draw"],t):t(e.ngxLeafletDraw={},e.ng.core,e.ngxLeaflet,e.L)}(this,function(e,r,n,t){"use strict";var a=/** @class */function(){function e(){}return e.handleEvent=function(e,t,r){
// Don't want to emit if there are no observers
0<t.observers.length&&e.run(function(){t.emit(r)})},e}(),o=/** @class */function(){function e(e,t){this.zone=t,this.drawOptions=null,
// Configure callback function for the map
this.drawReady=new r.EventEmitter,
// Draw Events
this.onDrawCreated=new r.EventEmitter,this.onDrawEdited=new r.EventEmitter,this.onDrawDeleted=new r.EventEmitter,this.onDrawStart=new r.EventEmitter,this.onDrawStop=new r.EventEmitter,this.onDrawVertex=new r.EventEmitter,this.onDrawEditStart=new r.EventEmitter,this.onDrawEditMove=new r.EventEmitter,this.onDrawEditResize=new r.EventEmitter,this.onDrawEditVertex=new r.EventEmitter,this.onDrawEditStop=new r.EventEmitter,this.onDrawDeleteStart=new r.EventEmitter,this.onDrawDeleteStop=new r.EventEmitter,this.onDrawToolbarOpened=new r.EventEmitter,this.onDrawToolbarClosed=new r.EventEmitter,this.onDrawMarkerContext=new r.EventEmitter,this.leafletDirective=new n.LeafletDirectiveWrapper(e)}return e.prototype.ngOnInit=function(){var r=this;this.leafletDirective.init(),
// Initialize the draw options (in case they weren't provided)
this.drawOptions=this.initializeDrawOptions(this.drawOptions),
// Create the control
this.drawControl=new t.Control.Draw(this.drawOptions),
// Pull out the feature group for convenience
this.featureGroup=this.drawOptions.edit.featureGroup,
// Add the control to the map
this.leafletDirective.getMap().addControl(this.drawControl);
// Register the main handler for events coming from the draw plugin
var e=this.leafletDirective.getMap();e.on(t.Draw.Event.CREATED,function(e){var t=e.layer;r.featureGroup.addLayer(t),a.handleEvent(r.zone,r.onDrawCreated,e)}),
// add draw event pass throughs
e.on(t.Draw.Event.EDITED,function(e){return a.handleEvent(r.zone,r.onDrawEdited,e)}),e.on(t.Draw.Event.DELETED,function(e){return a.handleEvent(r.zone,r.onDrawDeleted,e)}),e.on(t.Draw.Event.DRAWSTART,function(e){return a.handleEvent(r.zone,r.onDrawStart,e)}),e.on(t.Draw.Event.DRAWSTOP,function(e){return a.handleEvent(r.zone,r.onDrawStop,e)}),e.on(t.Draw.Event.EDITSTART,function(e){return a.handleEvent(r.zone,r.onDrawEditStart,e)}),e.on(t.Draw.Event.EDITMOVE,function(e){return a.handleEvent(r.zone,r.onDrawEditMove,e)}),e.on(t.Draw.Event.EDITRESIZE,function(e){return a.handleEvent(r.zone,r.onDrawEditResize,e)}),e.on(t.Draw.Event.EDITVERTEX,function(e){return a.handleEvent(r.zone,r.onDrawEditVertex,e)}),e.on(t.Draw.Event.EDITSTOP,function(e){return a.handleEvent(r.zone,r.onDrawEditStop,e)}),e.on(t.Draw.Event.DELETESTART,function(e){return a.handleEvent(r.zone,r.onDrawDeleteStart,e)}),e.on(t.Draw.Event.DELETESTOP,function(e){return a.handleEvent(r.zone,r.onDrawDeleteStop,e)}),e.on(t.Draw.Event.TOOLBAROPENED,function(e){return a.handleEvent(r.zone,r.onDrawToolbarOpened,e)}),e.on(t.Draw.Event.TOOLBARCLOSED,function(e){return a.handleEvent(r.zone,r.onDrawToolbarClosed,e)}),
// Notify others that the draw control has been created
this.drawReady.emit(this.drawControl)},e.prototype.ngOnDestroy=function(){this.leafletDirective.getMap().removeControl(this.drawControl)},e.prototype.ngOnChanges=function(e){
// No changes being handled currently
},e.prototype.getDrawControl=function(){return this.drawControl},e.prototype.initializeDrawOptions=function(e){
// Ensure the options have a featureGroup
return null==e&&(e={edit:null}),null==e.edit&&(e.edit={featureGroup:null}),null==e.edit.featureGroup&&(
// No feature group was provided, so we're going to add it ourselves
e.edit.featureGroup=t.featureGroup(),this.leafletDirective.getMap().addLayer(e.edit.featureGroup)),e},e.decorators=[{type:r.Directive,args:[{selector:"[leafletDraw]"}]}],
/** @nocollapse */
e.ctorParameters=function(){return[{type:n.LeafletDirective},{type:r.NgZone}]},e.propDecorators={drawOptions:[{type:r.Input,args:["leafletDrawOptions"]}],drawReady:[{type:r.Output,args:["leafletDrawReady"]}],onDrawCreated:[{type:r.Output,args:["leafletDrawCreated"]}],onDrawEdited:[{type:r.Output,args:["leafletDrawEdited"]}],onDrawDeleted:[{type:r.Output,args:["leafletDrawDeleted"]}],onDrawStart:[{type:r.Output,args:["leafletDrawStart"]}],onDrawStop:[{type:r.Output,args:["leafletDrawStop"]}],onDrawVertex:[{type:r.Output,args:["leafletDrawVertex"]}],onDrawEditStart:[{type:r.Output,args:["leafletDrawEditStart"]}],onDrawEditMove:[{type:r.Output,args:["leafletDrawEditMove"]}],onDrawEditResize:[{type:r.Output,args:["leafletDrawEditResize"]}],onDrawEditVertex:[{type:r.Output,args:["leafletDrawEditVertex"]}],onDrawEditStop:[{type:r.Output,args:["leafletDrawEditStop"]}],onDrawDeleteStart:[{type:r.Output,args:["leafletDrawDeleteStart"]}],onDrawDeleteStop:[{type:r.Output,args:["leafletDrawDeleteStop"]}],onDrawToolbarOpened:[{type:r.Output,args:["leafletDrawToolbarOpened"]}],onDrawToolbarClosed:[{type:r.Output,args:["leafletDrawToolbarClosed"]}],onDrawMarkerContext:[{type:r.Output,args:["leafletDrawMarkerContext"]}]},e}(),i=/** @class */function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[]}},e.decorators=[{type:r.NgModule,args:[{imports:[n.LeafletModule],exports:[o],declarations:[o]}]}],e}();e.LeafletDrawModule=i,e.LeafletDrawDirective=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-leaflet-draw.js.map